#include "type.h"
#include "core_cm3.h"
#include "stdio.h"

#include "funkcje_GPIO.h"
#include "funkcje_SSP.h"
#include "funkcje_7segled.h"
#include "funkcje_ratatuj.h"
#include "funkcje_diody.h"
#include "funkcje_timer.h"
#include "funkcje_speaker_tone.h"
#include "funkcje_OLED.h"

#define LED_ON() (GPIO_GetValue( PORT1, 2))
#define Button_Pressed() (!(LPC_GPIO0->DATA & (1<<1)))

static   uint8_t ch = '0';
volatile uint32_t global_timer = 0;
uint32_t ms;
uint32_t a;
uint32_t b;

static const char *songs[] =
{
   "E2,E2,E4,E2,E2,E4,E2,G2,C2,D2,E8,F2,F2,F2,F2,F2,E2,E2,E2,E2,D2,D2,E2,D4,G4,E2,E2,E4,E2,E2,E4,E2,G2,C2,D2,E8,F2,F2,F2,F2,F2,E2,E2,E2,G2,G2,F2,D2,C8,",

   "D4,B4,B4,A4,A4,G4,E4,D4.D2,E4,E4,A4,F4,D8.D4,d4,d4,c4,c4,B4,G4,E4.E2,F4,F4,A4,A4,G8,",

   "G2,A2,G2,E8.G2,A2,G2,E8.d4.d2,B8,c4,c2,G8,A4,A2,c2,B2,A2,G2,A2,G2,E8,",

   "C1,D4,C2,C2,D4,C2,C2,F3,F1,E2,E2,F4.E1,D4,E2,F2,D4,E2,F2,G3,B1,G2,B2,G4.F1,E4,D2,C2,E4,D2,C2,D3,C1,C2,F2,A4.c1,B2,G2,A2,F2,G2,E2,F2,D2,C3,A1,C2,G2,F4,",

   "A1,B2,c2,A3,A1,A2,B2,A2,F2,G4,G2,A2,G2,E2,F4,F2,G2,F2,D2,E4,E2,F2,E2,C2,E4,E2,F2,A2,c2,d4.c1,B2,F2,B4,B2,c2,B2,E2,A4.",

   "E2,E2,E2,D2,E2,G2,B3,G1,E2,E2,G2,E2,E4,D2,D2,F2,F2,A2,A2,F2,F2,G3,G1,E2,E2,G2,E2,E4,D4,E2,E2,E2,D2,G2,A2,B4,c2,B2,A2,G2,F2,E2,G3,F1,F8,E4,",

   "A2,A1,B1,A2,F2,F1,G1,F2,E2,E1,F1,E1,C1,D1,E1,F1,G1,A2,A2,A1,B1,A2,E2,A1,B1,c2,d2,F2,G2,A4_D1,D1,D1,E1,F1,E1,D1,E1,F2,D2,E1,E1,E1,F1,G1,F1,E1,F1,G2,E2,F1,G1,A2,G1,F1,G1,A1,B2,A1,G1,A1,B1,c2,B1,A1,d2,d2,",
};


void SysTick_Handler(void)
{
	global_timer++;
}

static void rotate_switch(uint8_t rotateDir)
{
    if (rotateDir != ROTATE_WAIT)
    {

        if (rotateDir == ROTATE_RIGHT)
        {
            ch++;
        }
        else
        {
            ch--;
        }

        if (ch > '5')
            ch = '1';
        else if (ch < '1')
            ch = '5';

        led7_setChar(ch);

    }
}

static void przycisk_i_dioda()
{
	if ((a!=10) & (b!=10))
	{

		ms = global_timer;
		while (global_timer - ms < a);
		rgb_diodaB ();

		ms = global_timer;
		while (global_timer - ms < b);
		rgb_diodaG ();

	}

	else
	{
		rgb_diodaR ();

	    for (int i = 0; i < sizeof(songs) / sizeof(uint8_t*); i++)
	    {
	        playSong((uint8_t*)songs[i]);
	        //delay32Ms_timer0(3000);
	    }


	}
}



/*MAIN*/
int main (void) {


    SysTick_Config(SystemCoreClock / 100);	 // 10ms

    GPIO_init();
    timer0_32_init(10);
    SSP_init();

    rotate_init();
    led7_init();
    rgb_init();
    speaker_init();

    while(!Button_Pressed())
    {
    	rotate_switch(rotate_read());
    }

    a = 70 - (ch - (48 + 1) ) * 10;
    b = 60 - (ch - (48 + 1) ) * 10;

    while(1)
    {
    	przycisk_i_dioda();
    	if (Button_Pressed() & LED_ON() & (a > 10) & (b > 10))
    		{
    			a-=10;
    			b-=10;
    			ch++;
    			led7_setChar(ch);
    		}

    }

}
